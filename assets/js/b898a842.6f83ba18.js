"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([["411924"],{85220:function(e,n,t){t.r(n),t.d(n,{default:()=>u,frontMatter:()=>r,metadata:()=>s,assets:()=>c,toc:()=>d,contentTitle:()=>a});var s=JSON.parse('{"id":"sql-manual/sql-functions/scalar-functions/bitwise-functions/bit_test","title":"BIT_TEST","description":"\x3c!--","source":"@site/docs/sql-manual/sql-functions/scalar-functions/bitwise-functions/bit_test.md","sourceDirName":"sql-manual/sql-functions/scalar-functions/bitwise-functions","slug":"/sql-manual/sql-functions/scalar-functions/bitwise-functions/bit_test","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/bitwise-functions/bit_test","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"BIT_TEST","language":"en"},"sidebar":"docs","previous":{"title":"BITAND","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/bitwise-functions/bitand"},"next":{"title":"BIT_LENGTH","permalink":"/docs/dev/sql-manual/sql-functions/scalar-functions/bitwise-functions/bit-length"}}'),i=t("785893"),l=t("250065");let r={title:"BIT_TEST",language:"en"},a=void 0,c={},d=[{value:"Description",id:"description",level:2},{value:"Alias",id:"alias",level:2},{value:"Syntax",id:"syntax",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Return Value",id:"return-value",level:2},{value:"Examples",id:"examples",level:2}];function o(e){let n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,i.jsxs)(n.p,{children:["Convert the value of ",(0,i.jsx)(n.code,{children:"<x>"})," to binary form and return the value of the specified position ",(0,i.jsx)(n.code,{children:"<bits>"}),", where ",(0,i.jsx)(n.code,{children:"<bits>"})," starts from 0 and goes from right to left."]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"<bits>"})," has multiple values, the values at multiple ",(0,i.jsx)(n.code,{children:"<bits>"})," positions are combined using the AND operator and the final result is returned."]}),"\n",(0,i.jsxs)(n.p,{children:["If the value of ",(0,i.jsx)(n.code,{children:"<bits>"})," is negative or exceeds the total number of bits in ",(0,i.jsx)(n.code,{children:"<x>"}),", the result will be 0."]}),"\n",(0,i.jsxs)(n.p,{children:["Integer ",(0,i.jsx)(n.code,{children:"<x>"})," range: TINYINT, SMALLINT, INT, BIGINT, LARGEINT."]}),"\n",(0,i.jsx)(n.h2,{id:"alias",children:"Alias"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"BIT_TEST_ALL"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"BIT_TEST( <x>, <bits>[, <bits> ... ])\n"})}),"\n",(0,i.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"parameter"}),(0,i.jsx)(n.th,{children:"description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<x>"})}),(0,i.jsx)(n.td,{children:"The integer to be calculated"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"<bits>"})}),(0,i.jsx)(n.td,{children:"The value at the specified position"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsx)(n.p,{children:"Returns the value at the specified position"}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"select BIT_TEST(43, 1), BIT_TEST(43, -1), BIT_TEST(43, 0, 1, 3, 5,2);\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"+-----------------+------------------+-----------------------------+\n| bit_test(43, 1) | bit_test(43, -1) | bit_test(43, 0, 1, 3, 5, 2) |\n+-----------------+------------------+-----------------------------+\n|               1 |                0 |                           0 |\n+-----------------+------------------+-----------------------------+\n"})})]})}function u(e={}){let{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},250065:function(e,n,t){t.d(n,{Z:function(){return a},a:function(){return r}});var s=t(667294);let i={},l=s.createContext(i);function r(e){let n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);